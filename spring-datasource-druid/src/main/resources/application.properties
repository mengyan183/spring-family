# 使用 druid 相关配置
# 设置合理的建立连接超时时间
# 连接方式指定为 mysql "MODE=MySQL"
spring.datasource.druid.url=jdbc:h2:mem:foo;MODE=MySQL
spring.datasource.druid.username=sa
spring.datasource.druid.password=

# 配置相关filter : https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter
# 对于 stat,wall,log4j属于druid 提供的默认配置
# customconn 自定义 filter, 对于自定义filter需要在 META-INF/druid-filter.properties文件中暴露
# 对于自定义filter可以参考 com.alibaba.druid 包中 默认已提供的 相关filter进行参考
# 例如:druid.jar 中 META-INF/druid-filter.properties 中的 druid.filters.stat=com.alibaba.druid.filter.stat.StatFilter
# 以下操作为统一开启相关filter ,对于 customconn 属于自定义 filter
spring.datasource.druid.filters=stat,wall,customconn


# 修改 连接池 中的 连接数量
spring.datasource.druid.initial-size=5
spring.datasource.druid.max-active=5
spring.datasource.druid.min-idle=5

# druid 慢查相关配置
# 可以单独开启"stat" filter也可以通过 上面 "spring.datasource.druid.filters" 进行批量开启
#spring.datasource.druid.filter.stat.enabled=true
spring.datasource.druid.filter.stat.log-slow-sql=true
# 设置慢查的时间标准为 1000 ms
spring.datasource.druid.filter.stat.slow-sql-millis=1000

# druid 连接监控
# 当开启连接相关检查后 ,会在 com.alibaba.druid.pool.DruidDataSource.getConnectionDirect 获取连接时去执行相关的监控操作
# 导致获取连接性能降低,因此一般不建议在生产环境上开启相关配置
spring.datasource.druid.test-on-borrow=true
spring.datasource.druid.test-on-return=true
spring.datasource.druid.test-while-idle=true